apiVersion: apps/v1
kind: Deployment
metadata:
  name: tg-campaign
  namespace: campaign
spec:
  selector:
    matchLabels:
      app: tg-campaign
  replicas: 2
  template:
    metadata:
      labels:
        app: tg-campaign
    spec:
      containers:
        - name: tg-campaign
          image: dopeteam/tg-campaign
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: DB_URL
              valueFrom:
                configMapKeyRef:
                  name: campaign-service-config
                  key: DB_URL
            - name: DB_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: campaign-service-config
                  key: DB_USERNAME
            - name: DB_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: campaign-service-config
                  key: DB_PASSWORD
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: campaign-service-config
                  key: REDIS_HOST
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  name: campaign-service-config
                  key: REDIS_PORT
            - name: REDIS_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: campaign-service-config
                  key: REDIS_PASSWORD

---

apiVersion: v1
kind: Service
metadata:
  name: tg-campaign-svc
  namespace: campaign
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: /actuator/prometheus
    prometheus.io/port: "8080"
spec:
  selector:
    app: tg-campaign
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 8080

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tg-campaign-ingress
  namespace: campaign
  annotations:
    ingress.kubernetes.io/ssl-redirect: "true"
    # nginx.ingress.kubernetes.io/rewrite-target: /
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
    - hosts:
        - dope.yanychoi.site
      secretName: ingress-tls-secrets
  ingressClassName: nginx
  rules:
    - host: dope.yanychoi.site
      http:
        paths:
          - path: /api/campaign
            pathType: Prefix
            backend:
              service:
                name: tg-campaign-svc
                port:
                  number: 8080
