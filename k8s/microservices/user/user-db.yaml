apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: tg-user-db
  namespace: user
spec:
  selector:
    matchLabels:
      app: tg-user-db
  # serviceName: tg-user-db-svc
  replicas: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: tg-user-db
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: mysql
          image: mysql:8.0.33
          ports:
            - containerPort: 3306
              name: mysql
          volumeMounts:
              - name: mysql-persistent-storage
                mountPath: /var/lib/mysql
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "1234"
            - name: MYSQL_DATABASE
              value: tg_user
  volumeClaimTemplates:
    - metadata:
        name: mysql-persistent-storage
        namespace: user
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: "nfs-client"
        resources:
          requests:
            storage: 5Gi
---

apiVersion: v1
kind: Service
metadata:
  name: tg-user-db-svc
  namespace: user
spec:
  selector:
    app: tg-user-db
  type: ClusterIP
  ports:
    - port: 3306
      targetPort: 3306

---
# a redis db for session management

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: session-db
  namespace: user
spec:
  selector:
    matchLabels:
      app: campaign-db
  serviceName: campaign-db-svc
  replicas: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: campaign-db
    spec:
      containers:
        - name: redis
          image: redis:7.0.11
          ports:
            - containerPort: 6379
              name: redis
          volumeMounts:
            - name: redis-persistent-storage
              mountPath: /data
          env:
            - name: REDIS_PASSWORD
              value: "1234"
  volumeClaimTemplates:
    - metadata:
        name: redis-persistent-storage
        namespace: user
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: "nfs-client"
        resources:
          requests:
            storage: 5Gi

---
apiVersion: v1
kind: Service
metadata:
  name: session-db-svc
  namespace: user
spec:
  selector:
    app: session-db
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
  type: ClusterIP